{"ast":null,"code":"var _jsxFileName = \"/Users/irynadelim/Desktop/MobileAppDev/comp-lib-start/src/components/Accordion.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { GoChevronDown, GoChevronLeft } from 'react-icons/go';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Accordion(props) {\n  _s();\n  const [expandedIndex, setExpandedIndex] = useState(-1);\n  const {\n    items\n  } = props;\n  const renderedItems = items.map((item, index) => {\n    const isExpanded = index === expandedIndex;\n    const icon = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-2xl\",\n      children: isExpanded ? /*#__PURE__*/_jsxDEV(GoChevronDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(GoChevronLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 22\n    }, this);\n    const handleClick = nextIndex => {\n      setExpandedIndex(currentExpandedIndex => {\n        {/*if item is already open, close it. else, open it*/}\n        {/*we get current and next from react!*/}\n        if (currentExpandedIndex === nextIndex) {\n          return -1;\n        } else {\n          return nextIndex;\n        }\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleClick(index),\n        className: \"flex justify-between p-3 bg-gray-199 border-b items-center cursor-pointer\",\n        children: [item.label, icon]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-b p-5\",\n        children: item.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 32\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderedItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n}\n_s(Accordion, \"VGgwYDkzE0V3NPfFAbSlb4lQBfI=\");\n_c = Accordion;\nvar _c;\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"names":["useState","GoChevronDown","GoChevronLeft","jsxDEV","_jsxDEV","Accordion","props","_s","expandedIndex","setExpandedIndex","items","renderedItems","map","item","index","isExpanded","icon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","nextIndex","currentExpandedIndex","onClick","label","content","id","_c","$RefreshReg$"],"sources":["/Users/irynadelim/Desktop/MobileAppDev/comp-lib-start/src/components/Accordion.js"],"sourcesContent":["import {useState} from 'react'\nimport {GoChevronDown, GoChevronLeft} from 'react-icons/go'\nexport default function Accordion(props){\n    const [expandedIndex, setExpandedIndex] = useState(-1)\n    const {items} = props\n    const renderedItems = items.map((item, index)  => {\n        const isExpanded = index === expandedIndex\n        const icon = <span className=\"text-2xl\">\n            {/*Ternary: \n                1. 'isExpanded' condition you're checking to be true\n                2. the : basically means else\n            */}\n            {isExpanded ? <GoChevronDown/> : <GoChevronLeft/>}\n        </span>\n        const handleClick = (nextIndex) => {\n            setExpandedIndex((currentExpandedIndex) => {\n                  {/*if item is already open, close it. else, open it*/}\n                  {/*we get current and next from react!*/}\n                 if (currentExpandedIndex === nextIndex){\n                     return -1\n                 } else {\n                     return nextIndex\n                 }\n            })\n         }\n        return(\n            <div key={item.id} >\n                <div onClick={() => handleClick(index)} className=\"flex justify-between p-3 bg-gray-199 border-b items-center cursor-pointer\">\n                    {item.label}\n                    {icon}\n                </div>\n                {/* If content index matches the expanded index in useState, render it. Else, nothing */}\n                {/* && means that what gets rendered is the last truthy value, (truthy = true and real) */}\n                {isExpanded && <div className=\"border-b p-5\">{item.content}</div>}\n            </div>\n        )\n    })\n\n    return <div>{renderedItems}</div>\n}"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAAQC,aAAa,EAAEC,aAAa,QAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC3D,eAAe,SAASC,SAASA,CAACC,KAAK,EAAC;EAAAC,EAAA;EACpC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM;IAACU;EAAK,CAAC,GAAGJ,KAAK;EACrB,MAAMK,aAAa,GAAGD,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAM;IAC9C,MAAMC,UAAU,GAAGD,KAAK,KAAKN,aAAa;IAC1C,MAAMQ,IAAI,gBAAGZ,OAAA;MAAMa,SAAS,EAAC,UAAU;MAAAC,QAAA,EAKlCH,UAAU,gBAAGX,OAAA,CAACH,aAAa;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,gBAAGlB,OAAA,CAACF,aAAa;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;IACP,MAAMC,WAAW,GAAIC,SAAS,IAAK;MAC/Bf,gBAAgB,CAAEgB,oBAAoB,IAAK;QACrC,CAAC;QACD,CAAC;QACF,IAAIA,oBAAoB,KAAKD,SAAS,EAAC;UACnC,OAAO,CAAC,CAAC;QACb,CAAC,MAAM;UACH,OAAOA,SAAS;QACpB;MACL,CAAC,CAAC;IACL,CAAC;IACF,oBACIpB,OAAA;MAAAc,QAAA,gBACId,OAAA;QAAKsB,OAAO,EAAEA,CAAA,KAAMH,WAAW,CAACT,KAAK,CAAE;QAACG,SAAS,EAAC,2EAA2E;QAAAC,QAAA,GACxHL,IAAI,CAACc,KAAK,EACVX,IAAI;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,EAGLP,UAAU,iBAAIX,OAAA;QAAKa,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEL,IAAI,CAACe;MAAO;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GAP3DT,IAAI,CAACgB,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQZ,CAAC;EAEd,CAAC,CAAC;EAEF,oBAAOlB,OAAA;IAAAc,QAAA,EAAMP;EAAa;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACrC;AAACf,EAAA,CArCuBF,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}